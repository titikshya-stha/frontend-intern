{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\aakashlabs-react-task-enhanced-jsx\\\\src\\\\pages\\\\PublicApiPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicApiPage = () => {\n  _s();\n  const [joke, setJoke] = useState(\"\");\n  const fetchJoke = async () => {\n    try {\n      const res = await axios.get(\"https://icanhazdadjoke.com/\", {\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      setJoke(res.data.joke);\n    } catch (error) {\n      setJoke(\"Failed to fetch joke.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Joke Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchJoke,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"Get a Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), joke && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg\",\n      children: joke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicApiPage, \"4XJy2sRT+6MlDqQZkK+gXC8Zsp8=\");\n_c = PublicApiPage;\nexport default PublicApiPage;\nvar _c;\n$RefreshReg$(_c, \"PublicApiPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PublicApiPage","_s","joke","setJoke","fetchJoke","res","get","headers","Accept","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Downloads/aakashlabs-react-task-enhanced-jsx/src/pages/PublicApiPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst PublicApiPage = () => {\n  const [joke, setJoke] = useState(\"\");\n\n  const fetchJoke = async () => {\n    try {\n      const res = await axios.get(\"https://icanhazdadjoke.com/\", {\n        headers: { Accept: \"application/json\" },\n      });\n      setJoke(res.data.joke);\n    } catch (error) {\n      setJoke(\"Failed to fetch joke.\");\n    }\n  };\n\n  return (\n    <div className=\"p-6 text-center\">\n      <h1 className=\"text-2xl font-bold mb-4\">Joke Generator</h1>\n      <button\n        onClick={fetchJoke}\n        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n      >\n        Get a Joke\n      </button>\n      {joke && <p className=\"mt-4 text-lg\">{joke}</p>}\n    </div>\n  );\n};\n\nexport default PublicApiPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,EAAE;QACzDC,OAAO,EAAE;UAAEC,MAAM,EAAE;QAAmB;MACxC,CAAC,CAAC;MACFL,OAAO,CAACE,GAAG,CAACI,IAAI,CAACP,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdP,OAAO,CAAC,uBAAuB,CAAC;IAClC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAIY,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DjB,OAAA;MACEkB,OAAO,EAAEb,SAAU;MACnBO,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACvE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRd,IAAI,iBAAIH,OAAA;MAAGY,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEV;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACf,EAAA,CA1BID,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}